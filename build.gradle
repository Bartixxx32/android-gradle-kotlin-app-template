buildscript {
    ext.myRepos = {
        maven {
            url "https://plugins.gradle.org/m2/"                            // Mirrors jcenter() and mavenCentral()
        }
    }
    repositories myRepos

    dependencies {
        classpath "com.android.tools.build:gradle:2.1.2"                    // Android gradle plugin
        classpath "com.novoda:gradle-android-command-plugin:1.5.0"          // Android command plugin
        classpath "com.github.triplet.gradle:play-publisher:1.1.4"          // Publish to google play store
        classpath "com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.5.4"   // Dex method count
        classpath "com.vanniktech:gradle-android-apk-size-plugin:0.2.0"     // Apk size
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.0.2-1"       // Kotlin plugin
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:1.0.2-1"
    }
}

plugins {
    id "com.gradle.build-scan" version "1.0"                                // Gradle build receipt
    id "net.ltgt.errorprone" version "0.0.8"                                // Google error-prone
    id "com.github.kt3k.coveralls" version "2.6.3"                          // Code coverage
    id "com.github.ben-manes.versions" version "0.12.0"                     // Check for plugin updates
    id "build-dashboard"
    id "pmd"
    id "jacoco"
    id "findbugs"
    id "checkstyle"
}

repositories myRepos

apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-android-extensions"
apply plugin: "android-command"
apply plugin: "com.github.triplet.play"
apply plugin: "com.getkeepsafe.dexcount"
apply plugin: "com.vanniktech.android.apk.size"
apply from: rootProject.file("gradle/buildScan.gradle")
apply from: rootProject.file("gradle/compile.gradle")
apply from: rootProject.file("gradle/android.gradle")
apply from: rootProject.file("gradle/codeQuality.gradle")
apply from: rootProject.file("gradle/publishing.gradle")

android {
    defaultConfig {
        applicationId "burrows.apps.example.template"
        versionCode 1
        versionName "1.0"
    }

    // Shouldn"t the plugin be doing this for us?
    sourceSets {
        androidTest {
            java {
                srcDirs += "src/androidTest/kotlin"
            }
        }

        main {
            java {
                srcDirs += "src/main/kotlin"
            }
        }

        test {
            java {
                srcDirs += "src/test/kotlin"
            }
        }
    }

    // Debug - testing and letting others use
    signingConfigs {
        debug {
            storeFile rootProject.file("./.buildscript/debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles(getDefaultProguardFile("proguard-android-optimize.txt"),
                    "proguard-rules.pro")
            signingConfig signingConfigs.debug
        }
    }
}

dependencies {
    // Kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib:1.0.2-1"

    // Android Support Library for AppCompat
    compile "com.android.support:appcompat-v7:24.0.0"

    // Espresso Instrumentation Testing
    androidTestCompile "com.android.support:support-annotations:24.0.0"
    androidTestCompile("com.android.support.test.espresso:espresso-contrib:2.2.2") {
        exclude module: "appcompat-v7"
        exclude module: "support-v4"
        exclude module: "recyclerview-v7"
    }

    // Robolectric + Support v4
    testCompile "org.robolectric:shadows-play-services:3.1"
    testCompile "org.robolectric:shadows-support-v4:3.1"
    testCompile "org.khronos:opengl-api:gl1.1-android-2.1_r1"

    // AssertJ
    testCompile "com.android.support:support-annotations:24.0.0"
    testCompile "com.squareup.assertj:assertj-android:1.1.1"    // 2/3.1.0 for java 8
}
